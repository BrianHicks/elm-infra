---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
# TODO: this should be HA or traefik should be updated to use k8s secrets, once
# available.
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik-etcd
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-etcd
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-etcd
    spec:
      containers:
        - name: etcd
          image: quay.io/coreos/etcd:v3.2
          # TODO: some kind of persistent storage
          ports:
            - name: client
              containerPort: 2379
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-etcd
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-etcd
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 2379
      name: client
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      containers:
      - image: traefik:v1.5.3
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: admin
          containerPort: 8080
        securityContext:
          privileged: true
        args:
        - -d
        - --api
        - --kubernetes
        - --etcd
        - --etcd.endpoint=traefik-etcd.kube-system:2379
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
  type: NodePort
